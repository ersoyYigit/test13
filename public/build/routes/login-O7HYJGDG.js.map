{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1709646700873.1372\";\n}\n// REMIX HMR END\n\nimport { TextInput, Button, Title, Center, Paper, Container, Anchor, Flex, PasswordInput, Stack } from '@mantine/core';\nimport { useForm, isEmail, hasLength } from '@mantine/form';\nimport { Form, json, useLoaderData, useSubmit } from '@remix-run/react';\nimport { auth } from '~/services/auth.server';\nimport { sessionStorage } from '~/utils/storage';\nconst i18n = {\n  password: 'Password',\n  email: 'Email',\n  submitButton: 'Login',\n  title: 'Airport Services',\n  forgotPassword: 'Forgot password?'\n};\nexport async function action({\n  request\n}) {\n  return auth.authenticate('user-pass-form', request, {\n    successRedirect: '/modules',\n    failureRedirect: '/login'\n  });\n}\nexport async function loader({\n  request\n}) {\n  await auth.isAuthenticated(request, {\n    successRedirect: '/modules'\n  });\n  const session = await sessionStorage.getSession(request.headers.get('Cookie'));\n  const error = session.get(auth.sessionErrorKey);\n  return json({\n    error\n  });\n}\nexport default function LoginPage() {\n  _s();\n  const {\n    error\n  } = useLoaderData();\n  const form = useForm({\n    initialValues: {\n      email: 'john.doe@foo.com',\n      password: 'P@$$w0rd'\n    },\n    validate: {\n      email: isEmail('Invalid email'),\n      password: hasLength({\n        min: 4\n      }, 'Password must be at least 4 characters long')\n    }\n  });\n  const submit = useSubmit();\n  return <Stack justify=\"center\" h=\"100vh\" bg=\"dark.7\">\r\n      <Container w={480}>\r\n        <Center c=\"white\">\r\n          <Title order={2}>{i18n.title}</Title>\r\n        </Center>\r\n        <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\r\n          {error ? <div>{error.message}</div> : null}\r\n\r\n          <Form onSubmit={form.onSubmit((_values, event) => submit(event.currentTarget, {\n          replace: true,\n          method: 'POST'\n        }))}>\r\n            <TextInput mt=\"sm\" required name=\"email\" label={i18n.email} placeholder=\"Email\" {...form.getInputProps('email')} />\r\n            <PasswordInput mt=\"lg\" required name=\"password\" label={i18n.password} placeholder=\"Password\" {...form.getInputProps('password')} />\r\n\r\n            <Flex justify=\"end\" mt=\"md\">\r\n              <Anchor onClick={event => event.preventDefault()} href=\"#\" size=\"sm\">\r\n                {i18n.forgotPassword}\r\n              </Anchor>\r\n            </Flex>\r\n\r\n            <Button type=\"submit\" mt=\"xl\" fullWidth>\r\n              {i18n.submitButton}\r\n            </Button>\r\n          </Form>\r\n        </Paper>\r\n      </Container>\r\n    </Stack>;\n}\n_s(LoginPage, \"4gmzc9K+Ru8YQ3Ssqa+lVLKtHZg=\", false, function () {\n  return [useLoaderData, useForm, useSubmit];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,kBAAqB;AAkDX;AAzEV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAQA,IAAM,OAAO;AAAA,EACX,UAAU;AAAA,EACV,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO;AAAA,EACP,gBAAgB;AAClB;AAqBe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,OAAO,QAAQ;AAAA,IACnB,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,OAAO,QAAQ,eAAe;AAAA,MAC9B,UAAU,UAAU;AAAA,QAClB,KAAK;AAAA,MACP,GAAG,6CAA6C;AAAA,IAClD;AAAA,EACF,CAAC;AACD,QAAM,SAAS,UAAU;AACzB,SAAO,mDAAC,SAAM,SAAQ,UAAS,GAAE,SAAQ,IAAG,UACxC,6DAAC,aAAU,GAAG,KACZ;AAAA,uDAAC,UAAO,GAAE,SACR,6DAAC,SAAM,OAAO,GAAI,eAAK,SAAvB;AAAA;AAAA;AAAA;AAAA,WAA6B,KAD/B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAM,YAAU,MAAC,QAAO,MAAK,GAAG,IAAI,IAAI,IAAI,QAAO,MACjD;AAAA,cAAQ,mDAAC,SAAK,gBAAM,WAAZ;AAAA;AAAA;AAAA;AAAA,aAAoB,IAAS;AAAA,MAEtC,mDAAC,QAAK,UAAU,KAAK,SAAS,CAAC,SAAS,UAAU,OAAO,MAAM,eAAe;AAAA,QAC9E,SAAS;AAAA,QACT,QAAQ;AAAA,MACV,CAAC,CAAC,GACE;AAAA,2DAAC,aAAU,IAAG,MAAK,UAAQ,MAAC,MAAK,SAAQ,OAAO,KAAK,OAAO,aAAY,SAAS,GAAG,KAAK,cAAc,OAAO,KAA9G;AAAA;AAAA;AAAA;AAAA,eAAiH;AAAA,QACjH,mDAAC,iBAAc,IAAG,MAAK,UAAQ,MAAC,MAAK,YAAW,OAAO,KAAK,UAAU,aAAY,YAAY,GAAG,KAAK,cAAc,UAAU,KAA9H;AAAA;AAAA;AAAA;AAAA,eAAiI;AAAA,QAEjI,mDAAC,QAAK,SAAQ,OAAM,IAAG,MACrB,6DAAC,UAAO,SAAS,WAAS,MAAM,eAAe,GAAG,MAAK,KAAI,MAAK,MAC7D,eAAK,kBADR;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QAEA,mDAAC,UAAO,MAAK,UAAS,IAAG,MAAK,WAAS,MACpC,eAAK,gBADR;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,SAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA,KA1BG;AAAA;AAAA;AAAA;AAAA,SA2BL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,SAAS,SAAS;AAC3C,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
